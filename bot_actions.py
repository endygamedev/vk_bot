# –º–æ–¥—É–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –í–ö
import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import requests
import random
import json
import datetime


def write_message(vk: vk_api.vk_api.VkApi, user_id, message: str, keyboard) -> None:
    ''' –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º (message).

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            vk: vk_api.vk_api.VkApi - –æ–±—ä–µ–∫—Ç VkApi –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä—É–ø–ø–æ–π
            user_id - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–∫–æ–Ω—Ç–∞–∫—Ç–µ, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
            message: str - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            keyboard - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–∏–∞–ª–æ–≥–∞ –≤ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            None

        –ü–æ–±–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç:
            –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    '''


    vk.method('messages.send', {
        'user_id': user_id,
        'message': message,
        'random_id': random.getrandbits(31) * random.choice([-1, 1]),
        'keyboard': keyboard
    })


def send_photo(vk: vk_api.vk_api.VkApi, user_id, message: str, picture, keyboard) -> None:
    ''' –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º (message) –∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π (picture).

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            vk: vk_api.vk_api.VkApi - –æ–±—ä–µ–∫—Ç VkApi –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä—É–ø–ø–æ–π
            user_id - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–∫–æ–Ω—Ç–∞–∫—Ç–µ, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
            message: str - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            picture - –∫–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            keyboard - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–∏–∞–ª–æ–≥–∞ –≤ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            None

        –ü–æ–±–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç:
            –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    '''


    picURLFromServer = vk.method('photos.getMessagesUploadServer')  # –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ
    sendPicToServer = requests.post(picURLFromServer['upload_url'], files = {'photo': open(picture, 'rb')}).json()  # –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–º –≤—ã–¥–∞–ª VK Api Server
    savePicToServer = vk.method('photos.saveMessagesPhoto', {'photo': sendPicToServer['photo'], 'server': sendPicToServer['server'], 'hash': sendPicToServer['hash']})[0]  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –í–ö
    dataPic = f'photo{savePicToServer["owner_id"]}_{savePicToServer["id"]}'  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

    vk.method("messages.send", {  # –≤—ã—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        'user_id': user_id,
        'message': message,
        'attachment': dataPic,
        'random_id': random.getrandbits(31) * random.choice([-1, 1]),
        'keyboard': keyboard
     })


def history_messages(vk: vk_api.vk_api.VkApi, user_id) -> str:
    ''' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –µ–≥–æ —É—Ä–æ–≤–Ω—è.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            vk: vk_api.vk_api.VkApi - –æ–±—ä–µ–∫—Ç VkApi –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä—É–ø–ø–æ–π
            user_id - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–∫–æ–Ω—Ç–∞–∫—Ç–µ, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ —Å –±–æ—Ç–æ–º
    '''


    history = vk.method('messages.getHistory', {  # —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–æ—Ç–∞
        'user_id': user_id,
        'count': 200
    })

    count_messages = int(round(history['count'] / 2, 1))

    return {
        0 <= count_messages <= 20: f'üê• –£—Ä–æ–≤–µ–Ω—å 0.\n–í—ã –¥–∞–∂–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–ø—Ä–∏—Å—ã–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤, —á—Ç–æ —Å –≤–∞—Å –≤–∑—è—Ç—å...\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
        21 <= count_messages <= 40: f'üåù –£—Ä–æ–≤–µ–Ω—å 1.\n–í—ã –º–∞–ª—é—Å–µ–Ω—å–∫–∏–π –∏ –ø–æ–≥–∞–Ω–µ–Ω—å–∫–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∏–∫!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
        41 <= count_messages <= 80: f'üåö –£—Ä–æ–≤–µ–Ω—å 2.\n–í—ã –º–∞–ª–µ–Ω—å–∫–∏–π –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–≥–∞–Ω–µ—Ü!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
        81 <= count_messages <= 200: f'üë®‚Äçüíª –£—Ä–æ–≤–µ–Ω—å 3.\n–í—ã –±–æ–ª—å—à–µ –Ω–µ –º–∞–ª–µ–Ω—å–∫–∏–π –ø–æ–≥–∞–Ω–µ—Ü, –≤—ã –±–æ–ª—å—à–æ–π –ø–æ–≥–∞–Ω–µ—Ü!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
        count_messages >= 201: f'üèÖ –£—Ä–æ–≤–µ–Ω—å 4.\n–í–∞–º –µ—â—ë –Ω–µ –≤—ã–¥–∞–ª–∏ –ù–æ–±–µ–ª–µ–≤—Å–∫—É—é –ø—Ä–µ–º–∏—é?\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}'
    }[1]


def send_films(data: list) -> str:
    ''' –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä—ë—Ö —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            data: list - —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ —Ñ–∏–ª—å–º–∞–º–∏

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str - —Å—Ç—Ä–æ–∫—É (—Å–ø–∏—Å–æ–∫) —Ç—Ä—ë—Ö —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞
    '''


    return 'üé¨ –î—Ä—É–≥–∏–µ primats —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç:\n\n' + ''.join(random.sample(data, 3))


def send_task(data: list) -> str:
    ''' –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ª–∏–º–ø–∏–∞–¥–Ω–æ–π –∑–∞–¥–∞—á–∫–∏.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            data: list - —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥–Ω—ã—Ö –∑–∞–¥–∞—á–µ–∫

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str - —Å—Ç—Ä–æ–∫—É —Å–æ —Å–ª—É–π—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥–Ω–æ–π –∑–∞–¥–∞—á–∫–æ–π
    '''


    return 'ü§ì –†–∞–∑–≤–ª–µ–∫–∞–π—Å—è\n\n' + random.choice(data)


def birthday_on_week(data: list) -> str:
    ''' –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª—é–¥–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            data: list - —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è–º–∏

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str - —Å—Ç—Ä–æ–∫—É (—Å–ø–∏—Å–æ–∫) –ª—é–¥–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ
    '''


    lst = []
    s = '–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ —Ä–æ–¥–∏–ª—Å—è, –Ω–æ –µ—Å—Ç—å —à–∞–Ω—Å —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å)\nüòè –°–≤–æ–±–æ–¥–µ–Ω —Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º?'

    for b in range(1, 8):
        date_today = datetime.date.today()
        date_delta = datetime.timedelta(days = b)
        date_today_delta = date_today + date_delta
        lst.append(str(date_today_delta))

    lst1 = [_[5:7] for _ in lst]
    lst2 = [_[-2:] for _ in lst]
    lst_birthday = [_ for _ in data if _[-3:-1] in lst1 and _[-6:-4] in lst1]   # TODO: –≤–æ–∑–º–æ–∂–Ω–æ —Ç—É—Ç –æ—à–∏–±–∫–∞, –∑–∞—á–µ–º —Ç–æ–≥–¥–∞ –Ω—É–∂–µ–Ω lst (?)

    return s if lst_birthday == [] else ''.join(lst_birthday)



def birthday_on_month(month: str, data: list) -> str:
    ''' –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª—é–¥–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            month - –º–µ—Å—è—Ü
            data - —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è–º–∏

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str - —Å—Ç—Ä–æ–∫—É (—Å–ø–∏—Å–æ–∫) –ª—é–¥–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ –≤ –º–µ—Å—è—Ü–µ month

        dr(m, data) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ª—é–¥–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ m.
    '''

    s = '–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ —Ä–æ–¥–∏–ª—Å—è, –Ω–æ –µ—Å—Ç—å —à–∞–Ω—Å —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å)\nüòè –°–≤–æ–±–æ–¥–µ–Ω —Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º?'

    month_dict = {
            '—è–Ω–≤–∞—Ä—å': '01',
            '—Ñ–µ–≤—Ä–∞–ª—å': '02',
            '–º–∞—Ä—Ç': '03',
            '–∞–ø—Ä–µ–ª—å': '04',
            '–º–∞–π': '05',
            '–∏—é–Ω—å': '06',
            '–∏—é–ª—å': '07',
            '–∞–≤–≥—É—Å—Ç': '08',
            '—Å–µ–Ω—Ç—è–±—Ä—å': '09',
            '–æ–∫—Ç—è–±—Ä—å': '10',
            '–Ω–æ—è–±—Ä—å': '11',
            '–¥–µ–∫–∞–±—Ä—å': '12'
        }

    lst_birthday_on_month = [element for element in data if element[-3:-1] == month_dict.get(month)]

    return s if lst_birthday_on_month == [] else ''.join(lst_birthday_on_month)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def create_keyboard(response: str) -> VkKeyboard:
    ''' –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            response: str - –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            VkKeyboard - —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    '''


    keyboard = VkKeyboard(one_time = False)

    if response == '–∫–Ω–æ–ø–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —É—Å—Ç–∞–ª —É—á–∏—Ç—å—Å—è':
        keyboard.add_button('–Ω–æ –Ω–µ —É—Å—Ç–∞–ª –æ—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏', color = VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ß—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', color = VkKeyboardColor.POSITIVE)

    elif response == '–¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è':
        keyboard.add_button('–ù–∞ –º–µ—Å—è—Ü', color = VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ù–∞ –Ω–µ–¥–µ–ª—é', color = VkKeyboardColor.POSITIVE)
        keyboard.add_button('–í—Å–µ', color = VkKeyboardColor.POSITIVE)
    
    elif response == '–∂—É—Ä–Ω–∞–ª—ã':
        keyboard.add_openlink_button('–ñ—É—Ä–Ω–∞–ª –ü–ú-1901', 'https://docs.google.com/spreadsheets/d/1bkuZWPd4poOCDnAlB_Q6nTssKl7RAgQJWdeR-H3f5p4/edit?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–ñ—É—Ä–Ω–∞–ª –ü–ú-1902', 'https://docs.google.com/spreadsheets/d/12BweSMPcNlnrSGqC3ojNCwSVIUX4ckU7uN0zJ7W_8AQ/edit?usp=sharing')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '—É—á–µ–±–Ω–∏–∫–∏':
        keyboard.add_button('1 –∫—É—Ä—Å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('2 –∫—É—Ä—Å', color = VkKeyboardColor.POSITIVE)

    elif response == '1 –∫—É—Ä—Å':
        keyboard.add_button('–ú–∞—Ç. –∞–Ω–∞–ª–∏–∑', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ê–ª–≥–µ–±—Ä–∞', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–î–∏—Å–∫—Ä. –º–∞—Ç', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('Wolfram Mathematica', color = VkKeyboardColor.PRIMARY)
        keyboard.add_openlink_button('Python', 'https://drive.google.com/drive/folders/1gZ5SsNq9-9eVDHBjnu0E0WRly2Xgq4kW')
        keyboard.add_line()
        keyboard.add_button('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '2 –∫—É—Ä—Å':
        keyboard.add_button('–ú–∞—Ç. –∞–Ω–∞–ª–∏–∑', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–î–∏—Ñ—Ñ—É—Ä—ã', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_openlink_button('Python', 'https://yadi.sk/d/GyZhNPZfU41Znw?w=1')
        keyboard.add_line()
        keyboard.add_button('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–¥–∏—Ñ—Ñ—É—Ä—ã':
        keyboard.add_openlink_button('–§–∏–ª–∏–ø–ø–æ–≤ (–∑–∞–¥–∞—á–Ω–∏–∫)', 'https://drive.google.com/file/d/1vgoG9860XxwyUYgHbn77qeij3EDUUhYM/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–§–∏–ª–∏–ø–ø–æ–≤ (—É—á–µ–±–Ω–∏–∫)', 'https://drive.google.com/file/d/1w14id9t4uAoY43H8ofqCHAHI0rQsKrPH/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–°–∞–º–æ–π–ª–µ–Ω–∫–æ', 'https://drive.google.com/file/d/1lxTncQv4LBv_XVblqR-xl7-kSuPG6Nu_/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π':
        keyboard.add_openlink_button('Market Leader', 'https://drive.google.com/file/d/1erhO4mlomjMJmNBiesKzbUBTxhnpZhyt/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('Facilitator', 'https://drive.google.com/file/d/1W--_OH5gCdeKtTpdRbrfComGIW47xhHA/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('Practical Grammar Course', 'https://drive.google.com/file/d/18K5DeIlanen5FK81GBQNJ9T2Pt-w5kTd/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == 'wolfram mathematica':
        keyboard.add_openlink_button('–§—Ä–∏–¥–º–∞–Ω, –õ–µ–æ—Ä–∞', 'https://drive.google.com/file/d/1xg9g1LAuw-jIH6HwH9e-UE_GU9bq8Kri/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('S. Wolfram "Wolfram Language"', 'https://www.wolfram.com/language/elementary-introduction/2nd-ed/index.html')
        keyboard.add_line()
        keyboard.add_openlink_button('Help', 'https://reference.wolfram.com/language/')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–º–∞—Ç. –∞–Ω–∞–ª–∏–∑':
        keyboard.add_openlink_button('–î–µ–º–∏–¥–æ–≤–∏—á (–∑–∞–¥–∞—á–Ω–∏–∫)', 'https://drive.google.com/file/d/1VnHhcsfAlVg48nsYXWdXfNZiVkakamv-/view')
        keyboard.add_line()
        keyboard.add_openlink_button('–í–∏–Ω–æ–≥—Ä–∞–¥–æ–≤, –ì—Ä–æ–º–æ–≤', 'https://drive.google.com/file/d/1WgfLnZ2DOyz7d0rW34cBfzY_A4Ew5-_T/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–§–∏—Ö—Ç–µ–Ω–≥–æ–ª—å—Ü', 'https://drive.google.com/file/d/1pZ3DSjtPLJMmk12mP3e-kcW9QIez4_dq/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–ö–æ–Ω—Å–ø–µ–∫—Ç (1 –∫—É—Ä—Å 2 —Å–µ–º.)', 'https://drive.google.com/file/d/1AB5NmJGMzNU8HWodGXJfld0ycp9bQncR/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–∞–ª–≥–µ–±—Ä–∞':
        keyboard.add_openlink_button('–ò–∫—Ä–∞–º–æ–≤', 'https://drive.google.com/file/d/1KxIrUV3yGT_IKzz2X52JW6x1mUmoqP7C/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–í–æ–µ–≤–æ–¥–∏–Ω', 'https://drive.google.com/file/d/1KxIrUV3yGT_IKzz2X52JW6x1mUmoqP7C/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–ö—É—Ä–æ—à', 'https://drive.google.com/file/d/1ylNm8CkkiKSu27dJMEx0PcDKQWrjZjmA/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–§–∞–¥–µ–µ–≤', 'https://drive.google.com/file/d/1Dvui_BDw4EA-3eh5A0EYNyzcCjamPCYK/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–¥–∏—Å–∫—Ä. –º–∞—Ç':
        keyboard.add_openlink_button('–ò–≤–∞–Ω–æ–≤, –§—Ä–∏–¥–º–∞–Ω', 'https://drive.google.com/file/d/1_dAhc25iIYUQ-S877zowmfzYt07kN9gZ/view?usp=sharing')
        keyboard.add_line()
        keyboard.add_openlink_button('–ö–æ—Ä—Ç–µ, –§–∏–≥–µ–Ω "–ö–æ–º–±–∏–Ω–∞—Ç–æ—Ä–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"', 'https://drive.google.com/file/d/1kOZcitXuRBTKX0pgpXC8FEPenW4rjz6y/view')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏':
        keyboard.add_openlink_button('–ú–∞—Ç. –∞–Ω–∞–ª–∏–∑', 'https://us02web.zoom.us/j/86270022069?pwd=ZndYYjhFVlJvTGlGNkVteHBTVkx6QT09')
        keyboard.add_line()
        keyboard.add_openlink_button('–î–∏—Ñ—Ñ—É—Ä—ã', 'https://zoom.us/j/97568214849')
        keyboard.add_line()
        keyboard.add_openlink_button('–ë–†–°', 'http://www.rating.unecon.ru/')
        keyboard.add_line()
        keyboard.add_openlink_button('Moodle', 'https://student.unecon.ru/')
        keyboard.add_line()
        keyboard.add_button('–ù–∞–∑–∞–¥', color = VkKeyboardColor.NEGATIVE)

    elif response == '–Ω–∞ –º–µ—Å—è—Ü':
        keyboard.add_button('–Ø–Ω–≤–∞—Ä—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–§–µ–≤—Ä–∞–ª—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ú–∞—Ä—Ç', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–ê–ø—Ä–µ–ª—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ú–∞–π', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ò—é–Ω—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–ò—é–ª—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ê–≤–≥—É—Å—Ç', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–°–µ–Ω—Ç—è–±—Ä—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–û–∫—Ç—è–±—Ä—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ù–æ—è–±—Ä—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–î–µ–∫–∞–±—Ä—å', color = VkKeyboardColor.PRIMARY)

    else:
        keyboard.add_button('–ü—Ä–∏–≤–µ—Ç', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ü–æ–∫–∞', color = VkKeyboardColor.DEFAULT)
        keyboard.add_button('–£—Ä–æ–≤–µ–Ω—å', color = VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        
        keyboard.add_button('–ñ—É—Ä–Ω–∞–ª—ã', color = VkKeyboardColor.POSITIVE)
        keyboard.add_button('–£—á–µ–±–Ω–∏–∫–∏', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–î–µ–¥–ª–∞–π–Ω—ã', color = VkKeyboardColor.NEGATIVE)
        keyboard.add_line()

        keyboard.add_button('–î–Ω–∏ –†–æ–∂–¥–µ–Ω–∏—è', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ü–æ—á—Ç—ã', color = VkKeyboardColor.PRIMARY)
        keyboard.add_button('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏', color = VkKeyboardColor.POSITIVE)
        keyboard.add_line()

        keyboard.add_button('–ö–Ω–æ–ø–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —É—Å—Ç–∞–ª —É—á–∏—Ç—å—Å—è', color = VkKeyboardColor.PRIMARY)


    keyboard = keyboard.get_keyboard()
    return keyboard
